//! Commands for the person domain

use crate::value_objects::*;
use serde::{Deserialize, Serialize};
use uuid::Uuid;

/// Commands that can be sent to a Person aggregate
#[derive(Debug, Clone, Serialize, Deserialize)]
pub enum PersonCommand {
    /// Register a new person in the system
    RegisterPerson {
        /// Person's unique ID (generated by caller)
        person_id: Uuid,
        /// Identity information
        identity: IdentityComponent,
        /// Optional contact information
        contact: Option<ContactComponent>,
    },

    /// Change person's contact information
    ChangeContact {
        /// Person's ID
        person_id: Uuid,
        /// New contact information
        contact: ContactComponent,
    },

    /// Add employment information
    AddEmployment {
        /// Person's ID
        person_id: Uuid,
        /// Employment details
        employment: EmploymentComponent,
    },

    /// Change employment status
    ChangeEmploymentStatus {
        /// Person's ID
        person_id: Uuid,
        /// Organization ID
        organization_id: Uuid,
        /// New status
        status: String,
        /// End date if terminated
        end_date: Option<chrono::NaiveDate>,
    },

    /// Add position information
    AddPosition {
        /// Person's ID
        person_id: Uuid,
        /// Position details
        position: PositionComponent,
    },

    /// Change skills
    ChangeSkills {
        /// Person's ID
        person_id: Uuid,
        /// Skills information
        skills: SkillsComponent,
    },

    /// Grant access
    GrantAccess {
        /// Person's ID
        person_id: Uuid,
        /// Access details
        access: AccessComponent,
    },

    /// Add external identifier
    AddExternalIdentifier {
        /// Person's ID
        person_id: Uuid,
        /// System name
        system: String,
        /// Identifier value
        identifier: String,
    },
}


